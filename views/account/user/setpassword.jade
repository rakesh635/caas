include ../../layout/_nomenulayout.jade
include ../../includes/_head.jade
block pageContent
 .container-fluid
  .row
   .col-md-12.col-sm-12
    h1
       span#spn-title Complete Registration
    hr
 .container-fluid
      .row
        .col-md-4.col-md-offset-4
         #div-error.text-center.text-danger #{error}
         if(action === 'setpassword')
          form#form-setpswd.row.well(action='/user/setpassword' ,method='post')
           .form-group.col-md-12
             input#hdn-accountid(type='hidden',value='#{accountid}', name='accountid')
             label.control-label.col-md-4(for='password') Password
             .col-md-8.validate-user
                  input#txt-password.form-control(type='password', placeholder='Password', name='password',maxlength='20')
           .form-group.col-md-12
             label.control-label.col-md-4(for='confirmpassword') Confirm Password
             .col-md-8.validate-user
               input.form-control(type='password', placeholder='Confirm Password', name='confirmpassword',maxlength='20')
           .form-group.col-md-12
             .col-md-4.col-md-offset-4
               button.btn.btn-color_2.btn-sm(type='submit') Submit
         else if(action === 'login')
            | Congratulations!!! Your registration has been successful. Click here to 
            |           
            a.btn.btn-color_2.btn-sm(href='/') Login
            hr
         else
            | User already set the password for CaaS account using this link
            |           
            a.btn.btn-color_2.btn-sm(href='/') Login
            hr
block pageScript
 script(src="/assets/plugins/validator/bootstrapValidator.min.js" type="text/css")
 script(src="/assets/plugins/validator/bootstrapValidator.min.js" type="text/javascript")
 script.
  $( document ).ready(function() {
    $('#txt-password').focus(function(){
      $('#div-error').html('');
    }); 
    $('#form-setpswd').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                password: {
                    trigger: 'blur',
                    validators: {
                        notEmpty: {
                            message: 'Password is required'
                        },
                        stringLength: {
                            max: 20,
                            message: 'Password should not exceed 20 characters'
                        },
                        regexp: {
                            regexp: /^[\w]+$/,
                            message: 'UserName should not contain white spaces'
                        },
                        different: {
                            field: 'username',
                            message: 'The UserName and Password cannot be same'
                        }
                    }
                },
                confirmpassword: {
                    trigger: 'blur',
                    validators: {
                        notEmpty: {
                            message: 'Confirm Password is required'
                        },
                        identical: {
                            field: 'password',
                            message: 'Password and Confirm Password Mismatch'
                        }
                    }
                }
            }
        });
     });